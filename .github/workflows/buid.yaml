name: Build + deploy to GitHub Pages

on:
  push:
    branches:
      - master

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: 'pages'
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    container: node:18.16.0-bullseye
    env:
      DEV_ENV: container
    steps:
      - name: Checkout repo
        uses: actions/checkout@v3

      - name: Cache node modules
        uses: actions/cache@v2
        with:
          path: node_modules
          key: node-modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            node-modules-${{ hashFiles('yarn.lock') }}
            node-modules-

      - name: Install Node packages
        run: |
          yarn install --frozen-lockfile

      - name: Run linter
        run: yarn lint .

      - name: Build
        run: yarn run gh-pages:build

      - name: React router hack
        run: |
          cp dist/index.html dist/404.html"

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Path of the directory containing the static assets.
          path: dist/
  # deploy:
  #   environment:
  #     name: github-pages
  #     url: ${{ steps.deployment.outputs.page_url }}
  #   runs-on: ubuntu-latest
  #   needs: build
  #   steps:
  #     - name: Deploy to GitHub Pages
  #       id: deployment
  #       uses: actions/deploy-pages@v2
